{"version":3,"file":"js/7588-fb95c09fcfe7341cd766.chunk.js","mappings":"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","sources":["webpack://app/./node_modules/@graphiql/react/dist/lint.es2.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport { GraphQLNonNull, GraphQLList, GraphQLInputObjectType, GraphQLEnumType, GraphQLScalarType } from \"graphql\";\nimport \"./index.es.js\";\nimport \"react\";\nimport \"react-dom\";\nfunction jsonParse(str) {\n  string = str;\n  strLen = str.length;\n  start = end = lastEnd = -1;\n  ch();\n  lex();\n  const ast = parseObj();\n  expect(\"EOF\");\n  return ast;\n}\n__name(jsonParse, \"jsonParse\");\nlet string;\nlet strLen;\nlet start;\nlet end;\nlet lastEnd;\nlet code;\nlet kind;\nfunction parseObj() {\n  const nodeStart = start;\n  const members = [];\n  expect(\"{\");\n  if (!skip(\"}\")) {\n    do {\n      members.push(parseMember());\n    } while (skip(\",\"));\n    expect(\"}\");\n  }\n  return {\n    kind: \"Object\",\n    start: nodeStart,\n    end: lastEnd,\n    members\n  };\n}\n__name(parseObj, \"parseObj\");\nfunction parseMember() {\n  const nodeStart = start;\n  const key = kind === \"String\" ? curToken() : null;\n  expect(\"String\");\n  expect(\":\");\n  const value = parseVal();\n  return {\n    kind: \"Member\",\n    start: nodeStart,\n    end: lastEnd,\n    key,\n    value\n  };\n}\n__name(parseMember, \"parseMember\");\nfunction parseArr() {\n  const nodeStart = start;\n  const values = [];\n  expect(\"[\");\n  if (!skip(\"]\")) {\n    do {\n      values.push(parseVal());\n    } while (skip(\",\"));\n    expect(\"]\");\n  }\n  return {\n    kind: \"Array\",\n    start: nodeStart,\n    end: lastEnd,\n    values\n  };\n}\n__name(parseArr, \"parseArr\");\nfunction parseVal() {\n  switch (kind) {\n    case \"[\":\n      return parseArr();\n    case \"{\":\n      return parseObj();\n    case \"String\":\n    case \"Number\":\n    case \"Boolean\":\n    case \"Null\":\n      const token = curToken();\n      lex();\n      return token;\n  }\n  expect(\"Value\");\n}\n__name(parseVal, \"parseVal\");\nfunction curToken() {\n  return { kind, start, end, value: JSON.parse(string.slice(start, end)) };\n}\n__name(curToken, \"curToken\");\nfunction expect(str) {\n  if (kind === str) {\n    lex();\n    return;\n  }\n  let found;\n  if (kind === \"EOF\") {\n    found = \"[end of file]\";\n  } else if (end - start > 1) {\n    found = \"`\" + string.slice(start, end) + \"`\";\n  } else {\n    const match = string.slice(start).match(/^.+?\\b/);\n    found = \"`\" + (match ? match[0] : string[start]) + \"`\";\n  }\n  throw syntaxError(`Expected ${str} but found ${found}.`);\n}\n__name(expect, \"expect\");\nclass JSONSyntaxError extends Error {\n  constructor(message, position) {\n    super(message);\n    this.position = position;\n  }\n}\n__name(JSONSyntaxError, \"JSONSyntaxError\");\nfunction syntaxError(message) {\n  return new JSONSyntaxError(message, { start, end });\n}\n__name(syntaxError, \"syntaxError\");\nfunction skip(k) {\n  if (kind === k) {\n    lex();\n    return true;\n  }\n}\n__name(skip, \"skip\");\nfunction ch() {\n  if (end < strLen) {\n    end++;\n    code = end === strLen ? 0 : string.charCodeAt(end);\n  }\n  return code;\n}\n__name(ch, \"ch\");\nfunction lex() {\n  lastEnd = end;\n  while (code === 9 || code === 10 || code === 13 || code === 32) {\n    ch();\n  }\n  if (code === 0) {\n    kind = \"EOF\";\n    return;\n  }\n  start = end;\n  switch (code) {\n    case 34:\n      kind = \"String\";\n      return readString();\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      kind = \"Number\";\n      return readNumber();\n    case 102:\n      if (string.slice(start, start + 5) !== \"false\") {\n        break;\n      }\n      end += 4;\n      ch();\n      kind = \"Boolean\";\n      return;\n    case 110:\n      if (string.slice(start, start + 4) !== \"null\") {\n        break;\n      }\n      end += 3;\n      ch();\n      kind = \"Null\";\n      return;\n    case 116:\n      if (string.slice(start, start + 4) !== \"true\") {\n        break;\n      }\n      end += 3;\n      ch();\n      kind = \"Boolean\";\n      return;\n  }\n  kind = string[start];\n  ch();\n}\n__name(lex, \"lex\");\nfunction readString() {\n  ch();\n  while (code !== 34 && code > 31) {\n    if (code === 92) {\n      code = ch();\n      switch (code) {\n        case 34:\n        case 47:\n        case 92:\n        case 98:\n        case 102:\n        case 110:\n        case 114:\n        case 116:\n          ch();\n          break;\n        case 117:\n          ch();\n          readHex();\n          readHex();\n          readHex();\n          readHex();\n          break;\n        default:\n          throw syntaxError(\"Bad character escape sequence.\");\n      }\n    } else if (end === strLen) {\n      throw syntaxError(\"Unterminated string.\");\n    } else {\n      ch();\n    }\n  }\n  if (code === 34) {\n    ch();\n    return;\n  }\n  throw syntaxError(\"Unterminated string.\");\n}\n__name(readString, \"readString\");\nfunction readHex() {\n  if (code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102) {\n    return ch();\n  }\n  throw syntaxError(\"Expected hexadecimal digit.\");\n}\n__name(readHex, \"readHex\");\nfunction readNumber() {\n  if (code === 45) {\n    ch();\n  }\n  if (code === 48) {\n    ch();\n  } else {\n    readDigits();\n  }\n  if (code === 46) {\n    ch();\n    readDigits();\n  }\n  if (code === 69 || code === 101) {\n    code = ch();\n    if (code === 43 || code === 45) {\n      ch();\n    }\n    readDigits();\n  }\n}\n__name(readNumber, \"readNumber\");\nfunction readDigits() {\n  if (code < 48 || code > 57) {\n    throw syntaxError(\"Expected decimal digit.\");\n  }\n  do {\n    ch();\n  } while (code >= 48 && code <= 57);\n}\n__name(readDigits, \"readDigits\");\nCodeMirror.registerHelper(\"lint\", \"graphql-variables\", (text, options, editor) => {\n  if (!text) {\n    return [];\n  }\n  let ast;\n  try {\n    ast = jsonParse(text);\n  } catch (error) {\n    if (error instanceof JSONSyntaxError) {\n      return [lintError(editor, error.position, error.message)];\n    }\n    throw error;\n  }\n  const variableToType = options.variableToType;\n  if (!variableToType) {\n    return [];\n  }\n  return validateVariables(editor, variableToType, ast);\n});\nfunction validateVariables(editor, variableToType, variablesAST) {\n  const errors = [];\n  variablesAST.members.forEach((member) => {\n    var _a;\n    if (member) {\n      const variableName = (_a = member.key) === null || _a === void 0 ? void 0 : _a.value;\n      const type = variableToType[variableName];\n      if (!type) {\n        errors.push(lintError(editor, member.key, `Variable \"$${variableName}\" does not appear in any GraphQL query.`));\n      } else {\n        validateValue(type, member.value).forEach(([node, message]) => {\n          errors.push(lintError(editor, node, message));\n        });\n      }\n    }\n  });\n  return errors;\n}\n__name(validateVariables, \"validateVariables\");\nfunction validateValue(type, valueAST) {\n  if (!type || !valueAST) {\n    return [];\n  }\n  if (type instanceof GraphQLNonNull) {\n    if (valueAST.kind === \"Null\") {\n      return [[valueAST, `Type \"${type}\" is non-nullable and cannot be null.`]];\n    }\n    return validateValue(type.ofType, valueAST);\n  }\n  if (valueAST.kind === \"Null\") {\n    return [];\n  }\n  if (type instanceof GraphQLList) {\n    const itemType = type.ofType;\n    if (valueAST.kind === \"Array\") {\n      const values = valueAST.values || [];\n      return mapCat(values, (item) => validateValue(itemType, item));\n    }\n    return validateValue(itemType, valueAST);\n  }\n  if (type instanceof GraphQLInputObjectType) {\n    if (valueAST.kind !== \"Object\") {\n      return [[valueAST, `Type \"${type}\" must be an Object.`]];\n    }\n    const providedFields = /* @__PURE__ */ Object.create(null);\n    const fieldErrors = mapCat(valueAST.members, (member) => {\n      var _a;\n      const fieldName = (_a = member === null || member === void 0 ? void 0 : member.key) === null || _a === void 0 ? void 0 : _a.value;\n      providedFields[fieldName] = true;\n      const inputField = type.getFields()[fieldName];\n      if (!inputField) {\n        return [\n          [\n            member.key,\n            `Type \"${type}\" does not have a field \"${fieldName}\".`\n          ]\n        ];\n      }\n      const fieldType = inputField ? inputField.type : void 0;\n      return validateValue(fieldType, member.value);\n    });\n    Object.keys(type.getFields()).forEach((fieldName) => {\n      if (!providedFields[fieldName]) {\n        const fieldType = type.getFields()[fieldName].type;\n        if (fieldType instanceof GraphQLNonNull) {\n          fieldErrors.push([\n            valueAST,\n            `Object of type \"${type}\" is missing required field \"${fieldName}\".`\n          ]);\n        }\n      }\n    });\n    return fieldErrors;\n  }\n  if (type.name === \"Boolean\" && valueAST.kind !== \"Boolean\" || type.name === \"String\" && valueAST.kind !== \"String\" || type.name === \"ID\" && valueAST.kind !== \"Number\" && valueAST.kind !== \"String\" || type.name === \"Float\" && valueAST.kind !== \"Number\" || type.name === \"Int\" && (valueAST.kind !== \"Number\" || (valueAST.value | 0) !== valueAST.value)) {\n    return [[valueAST, `Expected value of type \"${type}\".`]];\n  }\n  if (type instanceof GraphQLEnumType || type instanceof GraphQLScalarType) {\n    if (valueAST.kind !== \"String\" && valueAST.kind !== \"Number\" && valueAST.kind !== \"Boolean\" && valueAST.kind !== \"Null\" || isNullish(type.parseValue(valueAST.value))) {\n      return [[valueAST, `Expected value of type \"${type}\".`]];\n    }\n  }\n  return [];\n}\n__name(validateValue, \"validateValue\");\nfunction lintError(editor, node, message) {\n  return {\n    message,\n    severity: \"error\",\n    type: \"validation\",\n    from: editor.posFromIndex(node.start),\n    to: editor.posFromIndex(node.end)\n  };\n}\n__name(lintError, \"lintError\");\nfunction isNullish(value) {\n  return value === null || value === void 0 || value !== value;\n}\n__name(isNullish, \"isNullish\");\nfunction mapCat(array, mapper) {\n  return Array.prototype.concat.apply([], array.map(mapper));\n}\n__name(mapCat, \"mapCat\");\n"],"names":["__defProp","Object","defineProperty","__name","target","value","configurable","jsonParse","str","string","strLen","length","start","end","lastEnd","ch","lex","ast","parseObj","expect","code","kind","nodeStart","members","skip","push","parseMember","key","curToken","parseVal","parseArr","values","token","JSON","parse","slice","found","match","syntaxError","JSONSyntaxError","Error","constructor","message","position","super","this","k","charCodeAt","readString","readNumber","readHex","readDigits","validateVariables","editor","variableToType","variablesAST","errors","forEach","member","_a","variableName","type","validateValue","node","lintError","valueAST","ofType","itemType","mapCat","item","providedFields","create","fieldErrors","fieldName","inputField","getFields","keys","name","isNullish","parseValue","severity","from","posFromIndex","to","array","mapper","Array","prototype","concat","apply","map","C","text","options","error"],"sourceRoot":""}