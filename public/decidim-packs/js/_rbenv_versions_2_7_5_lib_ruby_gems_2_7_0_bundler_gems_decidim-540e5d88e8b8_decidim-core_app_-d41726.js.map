{"version":3,"file":"js/_rbenv_versions_2_7_5_lib_ruby_gems_2_7_0_bundler_gems_decidim-540e5d88e8b8_decidim-core_app_-d41726.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AANA;AAQA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;;AACA;;AACA;;AACA;AAEA;AAEA;AAEA;AACA;AAzBA;;;;;;;;;;ACJA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA3CA;AA+CA;AACA;;AAGA;AACA;AAGA;AACA;;AAEA;;AAIA;AACA;AAIA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AAEA;AACA;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AAEA;AAEA;AAEA;AAzGA;AA6GA;AACA;;AAEA;AACA;AACA;AAlHA;AAqHA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA;AAGA;AACA;;;AACA;AAlIA;AAqIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AA7IA;AAgJA;AACA;AAAA;AAAA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AAhKA;AAmKA;AACA;AAAA;AAAA;;AACA;AACA;;AACA;;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AACA;AACA;AACA;AAxMA;;AA6MA;AACA;AADA;;;;;;;;;;ACjNA;AAEA;AAEA;AACA;;AAGA;;AAGA;AACA;AADA;;;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;;AAGA;AACA;;AAEA;AACA;AADA;AAGA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AAVA;;;AAcA;AACA;AACA;AACA;AADA;AAGA;AACA;;AACA;AArBA;;;AAyBA;AAAA;AAAA;AACA;AA1BA;AAxBA;AAJA;;AA2DA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAzBA;AAzEA","sources":["webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-540e5d88e8b8/decidim-core/app/packs/src/decidim/map/icon.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-540e5d88e8b8/decidim-core/app/packs/src/decidim/vendor/leaflet-tilelayer-here.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/vendor/jquery.truncate.js"],"sourcesContent":["import * as L from \"leaflet\";\nimport { SVGIcon } from \"leaflet-svgicon\"\n\nL.DivIcon.SVGIcon = SVGIcon;\nL.DivIcon.SVGIcon.DecidimIcon = L.DivIcon.SVGIcon.extend({\n  options: {\n    fillColor: \"#ef604d\",\n    opacity: 0\n  },\n  _createPathDescription: function() {\n    return \"M14 1.17a11.685 11.685 0 0 0-11.685 11.685c0 11.25 10.23 20.61 10.665 21a1.5 1.5 0 0 0 2.025 0c0.435-.435 10.665-9.81 10.665-21A11.685 11.685 0 0 0 14 1.17Zm0 17.415A5.085 5.085 0 1 1 19.085 13.5 5.085 5.085 0 0 1 14 18.585Z\";\n  },\n  _createCircle: function() {\n    return \"\"\n  },\n  // Improved version of the _createSVG, essentially the same as in later\n  // versions of Leaflet. It adds the `px` values after the width and height\n  // CSS making the focus borders work correctly across all browsers.\n  _createSVG: function() {\n    const path = this._createPath();\n    const circle = this._createCircle();\n    const text = this._createText();\n    const className = `${this.options.className}-svg`;\n\n    const style = `width:${this.options.iconSize.x}px; height:${this.options.iconSize.y}px;`;\n\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"${className}\" style=\"${style}\">${path}${circle}${text}</svg>`;\n\n    return svg;\n  }\n});\n","/* eslint-disable */\n\n// üçÇclass TileLayer.HERE\n// Tile layer for HERE maps tiles.\nL.TileLayer.HERE = L.TileLayer.extend({\n\n  options: {\n    subdomains: '1234',\n    minZoom: 2,\n    maxZoom: 18,\n\n    // üçÇoption scheme: String = 'normal.day'\n    // The \"map scheme\", as documented in the HERE API.\n    scheme: 'normal.day',\n\n    // üçÇoption resource: String = 'maptile'\n    // The \"map resource\", as documented in the HERE API.\n    resource: 'maptile',\n\n    // üçÇoption mapId: String = 'newest'\n    // Version of the map tiles to be used, or a hash of an unique map\n    mapId: 'newest',\n\n    // üçÇoption format: String = 'png8'\n    // Image format to be used (`png8`, `png`, or `jpg`)\n    format: 'png8',\n\n    // üçÇoption appId: String = ''\n    // Required option. The `app_id` provided as part of the HERE credentials\n    appId: '',\n\n    // üçÇoption appCode: String = ''\n    // Required option. The `app_code` provided as part of the HERE credentials\n    appCode: '',\n\n    // üçÇoption useCIT: boolean = false\n    // Whether to use the CIT when loading the here-maptiles\n    useCIT: false,\n\n    // üçÇoption useHTTPS: boolean = true\n    // Whether to use HTTPS when loading the here-maptiles\n    useHTTPS: true,\n\n    // üçÇoption language: String = ''\n    // The language of the descriptions on the maps that are loaded\n    language: '',\n\n    // üçÇoption language: String = ''\n    // The second language of the descriptions on the maps that are loaded\n    language2: '',\n  },\n\n\n  initialize: function initialize(options) {\n    options = L.setOptions(this, options);\n\n    // Decide if this scheme uses the aerial servers or the basemap servers\n    var schemeStart = options.scheme.split('.')[0];\n    options.tileResolution = 256;\n\n    // {Base URL}{Path}/{resource (tile type)}/{map id}/{scheme}/{zoom}/{column}/{row}/{size}/{format}\n    // ?apiKey={YOUR_API_KEY}\n    // &{param}={value}\n\n    var params = [\n      'apiKey=' + encodeURIComponent(options.apiKey)\n    ];\n    // Fallback to old app_id,app_code if no apiKey passed\n    if(!options.apiKey) {\n      params = [\n        'app_id=' + encodeURIComponent(options.appId),\n        'app_code=' + encodeURIComponent(options.appCode),\n      ];\n    }\n    if(options.language) {\n      params.push('lg=' + encodeURIComponent(options.language));\n    }\n    if(options.language2) {\n      params.push('lg2=' + encodeURIComponent(options.language2));\n    }\n    var urlQuery = '?' + params.join('&');\n\n    var path = '/maptile/2.1/{resource}/{mapId}/{scheme}/{z}/{x}/{y}/{tileResolution}/{format}' + urlQuery;\n    var attributionPath = '/maptile/2.1/copyright/{mapId}?apiKey={apiKey}';\n\n    var baseUrl = 'maps.ls.hereapi.com';\n\n    // Old style with apiId/apiCode for compatibility\n    if(!options.apiKey) {\n      // make sure the CIT-url can be used\n      baseUrl = 'maps' + (options.useCIT ? '.cit' : '') + '.api.here.com';\n      attributionPath = '/maptile/2.1/copyright/{mapId}?app_id={appId}&app_code={appCode}';\n    }\n\n    var tileServer = 'base.' + baseUrl;\n    if (schemeStart == 'satellite' || schemeStart == 'terrain' || schemeStart == 'hybrid') {\n      tileServer = 'aerial.' + baseUrl;\n    }\n    if (options.scheme.indexOf('.traffic.') !== -1) {\n      tileServer = 'traffic' + baseUrl;\n    }\n\n    var protocol = 'http' + (options.useHTTPS ? 's' : '');\n    var tileUrl = protocol + '://{s}.' + tileServer + path;\n\n    this._attributionUrl = L.Util.template(protocol + '://1.' + tileServer + attributionPath, this.options);\n\n    L.TileLayer.prototype.initialize.call(this, tileUrl, options);\n\n    this._attributionText = '';\n\n  },\n\n  onAdd: function onAdd(map) {\n    L.TileLayer.prototype.onAdd.call(this, map);\n\n    if (!this._attributionBBoxes) {\n      this._fetchAttributionBBoxes();\n    }\n  },\n\n  onRemove: function onRemove(map) {\n    //\n    // Remove the attribution text, and clear the cached text so it will be recalculated\n    // if/when we are shown again.\n    //\n    this._map.attributionControl.removeAttribution(this._attributionText);\n    this._attributionText = '';\n\n    this._map.off('moveend zoomend resetview', this._findCopyrightBBox, this);\n\n    //\n    // Call the prototype last, once we've tidied up our own changes\n    //\n    L.TileLayer.prototype.onRemove.call(this, map);\n  },\n\n  _fetchAttributionBBoxes: function _onMapMove() {\n    var xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = L.bind(function(){\n      if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n        this._parseAttributionBBoxes(JSON.parse(xmlhttp.responseText));\n      }\n    }, this);\n    xmlhttp.open(\"GET\", this._attributionUrl, true);\n    xmlhttp.send();\n  },\n\n  _parseAttributionBBoxes: function _parseAttributionBBoxes(json) {\n    if (!this._map) { return; }\n    var providers = json[this.options.scheme.split('.')[0]] || json.normal;\n    for (var i=0; i<providers.length; i++) {\n      if (providers[i].boxes) {\n        for (var j=0; j<providers[i].boxes.length; j++) {\n          var box = providers[i].boxes[j];\n          providers[i].boxes[j] = L.latLngBounds( [ [box[0], box[1]], [box[2], box[3]] ]);\n        }\n      }\n    }\n\n    this._map.on('moveend zoomend resetview', this._findCopyrightBBox, this);\n\n    this._attributionProviders = providers;\n\n    this._findCopyrightBBox();\n  },\n\n  _findCopyrightBBox: function _findCopyrightBBox() {\n    if (!this._map) { return; }\n    var providers = this._attributionProviders;\n    var visibleProviders = [];\n    var zoom = this._map.getZoom();\n    var visibleBounds = this._map.getBounds();\n\n    for (var i=0; i<providers.length; i++) {\n      if (providers[i].minLevel <= zoom && providers[i].maxLevel >= zoom) {\n\n        if (!providers[i].boxes) {\n          // No boxes = attribution always visible\n          visibleProviders.push(providers[i]);\n        } else {\n          for (var j=0; j<providers[i].boxes.length; j++) {\n            var box = providers[i].boxes[j];\n            if (visibleBounds.intersects(box)) {\n              visibleProviders.push(providers[i]);\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    var attributions = ['<a href=\"https://legal.here.com/en-gb/terms\" target=\"_blank\" rel=\"noopener noreferrer\">HERE maps</a>'];\n    for (var i=0; i<visibleProviders.length; i++) {\n      var provider = visibleProviders[i];\n      attributions.push('<abbr title=\"' + provider.alt + '\">' + provider.label + '</abbr>');\n    }\n\n    var attributionText = '¬© ' + attributions.join(', ') + '. ';\n\n    if (attributionText !== this._attributionText) {\n      this._map.attributionControl.removeAttribution(this._attributionText);\n      this._map.attributionControl.addAttribution(this._attributionText = attributionText);\n    }\n  },\n\n});\n\n\nL.tileLayer.here = function(opts){\n  return new L.TileLayer.HERE(opts);\n}\n","// From https://github.com/pathable/truncate/\n\n(function($) {\n\n  // Matches trailing non-space characters.\n  var chop = /(\\s*\\S+|\\s)$/;\n\n  // Matches the first word in the string.\n  var start = /^(\\S*)/;\n\n  // Return a truncated html string.  Delegates to $.fn.truncate.\n  $.truncate = function(html, options) {\n    return $('<div></div>').append(html).truncate(options).html();\n  };\n\n  // Truncate the contents of an element in place.\n  $.fn.truncate = function(options) {\n    if ($.isNumeric(options)) options = { length: options };\n    var o = $.extend({}, $.truncate.defaults, options);\n\n    return this.each(function() {\n      var self = $(this);\n\n      if (o.noBreaks) self.find('br').replaceWith(' ');\n\n      var text = self.text();\n      var excess = text.length - o.length;\n\n      if (o.stripTags) self.text(text);\n\n      // Chop off any partial words if appropriate.\n      if (o.words && excess > 0) {\n        var truncated = text.slice(0, o.length).replace(chop, '').length;\n\n        if (o.keepFirstWord && truncated === 0) {\n          excess = text.length - start.exec(text)[0].length - 1;\n        } else {\n          excess = text.length - truncated - 1;\n        }\n      }\n\n      if (excess < 0 || !excess && !o.truncated) return;\n\n      // Iterate over each child node in reverse, removing excess text.\n      $.each(self.contents().get().reverse(), function(i, el) {\n        var $el = $(el);\n        var text = $el.text();\n        var length = text.length;\n\n        // If the text is longer than the excess, remove the node and continue.\n        if (length <= excess) {\n          o.truncated = true;\n          excess -= length;\n          $el.remove();\n          return;\n        }\n\n        // Remove the excess text and append the ellipsis.\n        if (el.nodeType === 3) {\n          // should we finish the block anyway?\n          if (o.finishBlock) {\n            $(el.splitText(length)).replaceWith(o.ellipsis);\n          } else {\n            $(el.splitText(length - excess - 1)).replaceWith(o.ellipsis);\n          }\n          return false;\n        }\n\n        // Recursively truncate child nodes.\n        $el.truncate($.extend(o, { length: length - excess }));\n        return false;\n      });\n    });\n  };\n\n  $.truncate.defaults = {\n\n    // Strip all html elements, leaving only plain text.\n    stripTags: false,\n\n    // Only truncate at word boundaries.\n    words: false,\n\n    // When 'words' is active, keeps the first word in the string\n    // even if it's longer than a target length.\n    keepFirstWord: false,\n\n    // Replace instances of <br> with a single space.\n    noBreaks: false,\n\n    // if true always truncate the content at the end of the block.\n    finishBlock: false,\n\n    // The maximum length of the truncated html.\n    length: Infinity,\n\n    // The character to use as the ellipsis.  The word joiner (U+2060) can be\n    // used to prevent a hanging ellipsis, but displays incorrectly in Chrome\n    // on Windows 7.\n    // http://code.google.com/p/chromium/issues/detail?id=68323\n    ellipsis: '\\u2026' // '\\u2060\\u2026'\n\n  };\n\n})(jQuery);\n"],"names":[],"sourceRoot":""}