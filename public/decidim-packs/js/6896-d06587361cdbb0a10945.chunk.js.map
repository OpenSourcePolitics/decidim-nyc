{"version":3,"file":"js/6896-d06587361cdbb0a10945.chunk.js","mappings":"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","sources":["webpack://app/./node_modules/@graphiql/react/dist/mode.es2.js","webpack://app/./node_modules/@graphiql/react/dist/onlineParser.es.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport \"graphql\";\nimport { p, l as list, t } from \"./index.es.js\";\nimport { o as onlineParser } from \"./onlineParser.es.js\";\nimport \"react\";\nimport \"react-dom\";\nCodeMirror.defineMode(\"graphql-results\", (config) => {\n  const parser = onlineParser({\n    eatWhitespace: (stream) => stream.eatSpace(),\n    lexRules: LexRules,\n    parseRules: ParseRules,\n    editorConfig: { tabSize: config.tabSize }\n  });\n  return {\n    config,\n    startState: parser.startState,\n    token: parser.token,\n    indent,\n    electricInput: /^\\s*[}\\]]/,\n    fold: \"brace\",\n    closeBrackets: {\n      pairs: '[]{}\"\"',\n      explode: \"[]{}\"\n    }\n  };\n});\nfunction indent(state, textAfter) {\n  var _a, _b;\n  const levels = state.levels;\n  const level = !levels || levels.length === 0 ? state.indentLevel : levels[levels.length - 1] - (((_a = this.electricInput) === null || _a === void 0 ? void 0 : _a.test(textAfter)) ? 1 : 0);\n  return (level || 0) * (((_b = this.config) === null || _b === void 0 ? void 0 : _b.indentUnit) || 0);\n}\n__name(indent, \"indent\");\nconst LexRules = {\n  Punctuation: /^\\[|]|\\{|\\}|:|,/,\n  Number: /^-?(?:0|(?:[1-9][0-9]*))(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?/,\n  String: /^\"(?:[^\"\\\\]|\\\\(?:\"|\\/|\\\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*\"?/,\n  Keyword: /^true|false|null/\n};\nconst ParseRules = {\n  Document: [p(\"{\"), list(\"Entry\", p(\",\")), p(\"}\")],\n  Entry: [t(\"String\", \"def\"), p(\":\"), \"Value\"],\n  Value(token) {\n    switch (token.kind) {\n      case \"Number\":\n        return \"NumberValue\";\n      case \"String\":\n        return \"StringValue\";\n      case \"Punctuation\":\n        switch (token.value) {\n          case \"[\":\n            return \"ListValue\";\n          case \"{\":\n            return \"ObjectValue\";\n        }\n        return null;\n      case \"Keyword\":\n        switch (token.value) {\n          case \"true\":\n          case \"false\":\n            return \"BooleanValue\";\n          case \"null\":\n            return \"NullValue\";\n        }\n        return null;\n    }\n  },\n  NumberValue: [t(\"Number\", \"number\")],\n  StringValue: [t(\"String\", \"string\")],\n  BooleanValue: [t(\"Keyword\", \"builtin\")],\n  NullValue: [t(\"Keyword\", \"keyword\")],\n  ListValue: [p(\"[\"), list(\"Value\", p(\",\")), p(\"]\")],\n  ObjectValue: [p(\"{\"), list(\"ObjectField\", p(\",\")), p(\"}\")],\n  ObjectField: [t(\"String\", \"property\"), p(\":\"), \"Value\"]\n};\n","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { i as isIgnored, L as LexRules, P as ParseRules } from \"./index.es.js\";\nimport { Kind } from \"graphql\";\nfunction onlineParser(options = {\n  eatWhitespace: (stream) => stream.eatWhile(isIgnored),\n  lexRules: LexRules,\n  parseRules: ParseRules,\n  editorConfig: {}\n}) {\n  return {\n    startState() {\n      const initialState = {\n        level: 0,\n        step: 0,\n        name: null,\n        kind: null,\n        type: null,\n        rule: null,\n        needsSeparator: false,\n        prevState: null\n      };\n      pushRule(options.parseRules, initialState, Kind.DOCUMENT);\n      return initialState;\n    },\n    token(stream, state) {\n      return getToken(stream, state, options);\n    }\n  };\n}\n__name(onlineParser, \"onlineParser\");\nfunction getToken(stream, state, options) {\n  var _a;\n  if (state.inBlockstring) {\n    if (stream.match(/.*\"\"\"/)) {\n      state.inBlockstring = false;\n      return \"string\";\n    } else {\n      stream.skipToEnd();\n      return \"string\";\n    }\n  }\n  const { lexRules, parseRules, eatWhitespace, editorConfig } = options;\n  if (state.rule && state.rule.length === 0) {\n    popRule(state);\n  } else if (state.needsAdvance) {\n    state.needsAdvance = false;\n    advanceRule(state, true);\n  }\n  if (stream.sol()) {\n    const tabSize = (editorConfig === null || editorConfig === void 0 ? void 0 : editorConfig.tabSize) || 2;\n    state.indentLevel = Math.floor(stream.indentation() / tabSize);\n  }\n  if (eatWhitespace(stream)) {\n    return \"ws\";\n  }\n  const token = lex(lexRules, stream);\n  if (!token) {\n    const matchedSomething = stream.match(/\\S+/);\n    if (!matchedSomething) {\n      stream.match(/\\s/);\n    }\n    pushRule(SpecialParseRules, state, \"Invalid\");\n    return \"invalidchar\";\n  }\n  if (token.kind === \"Comment\") {\n    pushRule(SpecialParseRules, state, \"Comment\");\n    return \"comment\";\n  }\n  const backupState = assign({}, state);\n  if (token.kind === \"Punctuation\") {\n    if (/^[{([]/.test(token.value)) {\n      if (state.indentLevel !== void 0) {\n        state.levels = (state.levels || []).concat(state.indentLevel + 1);\n      }\n    } else if (/^[})\\]]/.test(token.value)) {\n      const levels = state.levels = (state.levels || []).slice(0, -1);\n      if (state.indentLevel) {\n        if (levels.length > 0 && levels[levels.length - 1] < state.indentLevel) {\n          state.indentLevel = levels[levels.length - 1];\n        }\n      }\n    }\n  }\n  while (state.rule) {\n    let expected = typeof state.rule === \"function\" ? state.step === 0 ? state.rule(token, stream) : null : state.rule[state.step];\n    if (state.needsSeparator) {\n      expected = expected === null || expected === void 0 ? void 0 : expected.separator;\n    }\n    if (expected) {\n      if (expected.ofRule) {\n        expected = expected.ofRule;\n      }\n      if (typeof expected === \"string\") {\n        pushRule(parseRules, state, expected);\n        continue;\n      }\n      if ((_a = expected.match) === null || _a === void 0 ? void 0 : _a.call(expected, token)) {\n        if (expected.update) {\n          expected.update(state, token);\n        }\n        if (token.kind === \"Punctuation\") {\n          advanceRule(state, true);\n        } else {\n          state.needsAdvance = true;\n        }\n        return expected.style;\n      }\n    }\n    unsuccessful(state);\n  }\n  assign(state, backupState);\n  pushRule(SpecialParseRules, state, \"Invalid\");\n  return \"invalidchar\";\n}\n__name(getToken, \"getToken\");\nfunction assign(to, from) {\n  const keys = Object.keys(from);\n  for (let i = 0; i < keys.length; i++) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n__name(assign, \"assign\");\nconst SpecialParseRules = {\n  Invalid: [],\n  Comment: []\n};\nfunction pushRule(rules, state, ruleKind) {\n  if (!rules[ruleKind]) {\n    throw new TypeError(\"Unknown rule: \" + ruleKind);\n  }\n  state.prevState = Object.assign({}, state);\n  state.kind = ruleKind;\n  state.name = null;\n  state.type = null;\n  state.rule = rules[ruleKind];\n  state.step = 0;\n  state.needsSeparator = false;\n}\n__name(pushRule, \"pushRule\");\nfunction popRule(state) {\n  if (!state.prevState) {\n    return;\n  }\n  state.kind = state.prevState.kind;\n  state.name = state.prevState.name;\n  state.type = state.prevState.type;\n  state.rule = state.prevState.rule;\n  state.step = state.prevState.step;\n  state.needsSeparator = state.prevState.needsSeparator;\n  state.prevState = state.prevState.prevState;\n}\n__name(popRule, \"popRule\");\nfunction advanceRule(state, successful) {\n  var _a;\n  if (isList(state) && state.rule) {\n    const step = state.rule[state.step];\n    if (step.separator) {\n      const separator = step.separator;\n      state.needsSeparator = !state.needsSeparator;\n      if (!state.needsSeparator && separator.ofRule) {\n        return;\n      }\n    }\n    if (successful) {\n      return;\n    }\n  }\n  state.needsSeparator = false;\n  state.step++;\n  while (state.rule && !(Array.isArray(state.rule) && state.step < state.rule.length)) {\n    popRule(state);\n    if (state.rule) {\n      if (isList(state)) {\n        if ((_a = state.rule) === null || _a === void 0 ? void 0 : _a[state.step].separator) {\n          state.needsSeparator = !state.needsSeparator;\n        }\n      } else {\n        state.needsSeparator = false;\n        state.step++;\n      }\n    }\n  }\n}\n__name(advanceRule, \"advanceRule\");\nfunction isList(state) {\n  const step = Array.isArray(state.rule) && typeof state.rule[state.step] !== \"string\" && state.rule[state.step];\n  return step && step.isList;\n}\n__name(isList, \"isList\");\nfunction unsuccessful(state) {\n  while (state.rule && !(Array.isArray(state.rule) && state.rule[state.step].ofRule)) {\n    popRule(state);\n  }\n  if (state.rule) {\n    advanceRule(state, false);\n  }\n}\n__name(unsuccessful, \"unsuccessful\");\nfunction lex(lexRules, stream) {\n  const kinds = Object.keys(lexRules);\n  for (let i = 0; i < kinds.length; i++) {\n    const match = stream.match(lexRules[kinds[i]]);\n    if (match && match instanceof Array) {\n      return { kind: kinds[i], value: match[0] };\n    }\n  }\n}\n__name(lex, \"lex\");\nexport { onlineParser as o };\n"],"names":["__defProp","Object","defineProperty","indent","state","textAfter","_a","_b","levels","length","this","electricInput","test","indentLevel","config","indentUnit","C","parser","o","eatWhitespace","stream","eatSpace","lexRules","LexRules","parseRules","ParseRules","editorConfig","tabSize","startState","token","fold","closeBrackets","pairs","explode","value","configurable","Punctuation","Number","String","Keyword","Document","p","l","Entry","t","Value","kind","NumberValue","StringValue","BooleanValue","NullValue","ListValue","ObjectValue","ObjectField","__name","target","onlineParser","options","eatWhile","i","L","P","initialState","level","step","name","type","rule","needsSeparator","prevState","pushRule","getToken","inBlockstring","match","skipToEnd","popRule","needsAdvance","advanceRule","sol","Math","floor","indentation","lex","SpecialParseRules","backupState","assign","concat","slice","expected","separator","ofRule","call","update","style","unsuccessful","to","from","keys","Invalid","Comment","rules","ruleKind","TypeError","successful","isList","Array","isArray","kinds"],"sourceRoot":""}