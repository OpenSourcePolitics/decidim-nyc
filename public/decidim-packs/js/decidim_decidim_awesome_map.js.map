{"version":3,"file":"js/decidim_decidim_awesome_map.js","mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;AACA;AAAA;;AACA;AACA;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AASA;AATA;AAWA;;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;;AAEA;AACA;AAAA;;AACA;AACA;AACA;AADA;;AAGA;;AACA;;AACA;;AACA;AAEA;;AAEA;AAMA;;;;AAEA;AAAA;;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;AAGA;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AATA;;AAYA;;AAEA;AACA;AADA;AAGA;AACA;AACA;AAxBA;AA0BA;;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;;AAEA;AAAA;;AACA;;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;AASA;;AACA;AAlBA;AAoBA;AACA;;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpIA;;AAEA;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AAFA;AAsDA;;;AAvDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;;AAEA;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AAFA;AA+CA;;;AAhDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;;AACA;AACA;;AACA;;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AApBA;AAsBA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AAGA;;;;;AACA;AAAA;;AACA;AACA;AAEA;AACA;;AACA;AACA;;AACA;;AACA;AACA;;AACA;;AAEA;AACA;;;AAEA;AACA;AARA;AAUA;AAfA;AAiBA;;;AAEA;AACA;AACA;;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;;AACA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AAGA;AAAA;AAAA;;AACA;AACA;AACA;AAAA;AAAA;AADA;;AAGA;AACA;AACA;;AACA;AACA;;;AAEA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/HA;;AAEA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;;AAIA;;AACA;AACA;;;;AAEA;AACA;AAGA;AACA;;;AAEA;AAAA;;AACA;;AACA;AACA;AACA;AAFA;;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AALA;;;AAQA;AACA;;AACA;AAFA;AAIA;AAbA;AAeA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAEA;;;AAEA;AAAA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AAXA;AAaA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAGA;;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;;AAMA;;;;;AACA;AAAA;;AAAA;;AACA;AACA;;AACA;;AAHA;AAIA;;;;AAEA;AAAA;;;AAEA;AACA;AACA;AACA;AAFA;;AAKA;AANA;;AASA;AACA;;;;AAnBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;;AAQA;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AACA;;AACA;;AAJA;AAKA;;;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;AAEA;AAAA;;;AAEA;AACA;AACA;AACA;AAFA;AAMA;;AACA;AACA;AACA;AADA;AATA;;;AAeA;AAfA;;AAkBA;AACA;;;AAEA;AAAA;;AACA;AACA;AACA;;AAGA;AACA;AAAA;AAAA;;AACA;AAEA;;AACA;AACA;AACA;AADA;AAGA;AACA;;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AAnBA;AAsBA;AACA;;;;AA1EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;;AAEA;AACA;AAAA;;AAAA;;AACA;AAEA;AACA;AACA;AACA;;AAHA;;AAOA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AADA;AAGA;;;;AAEA;AAAA;;;AAEA;AAEA;;AACA;AACA;AANA;;;AAUA;AACA;AACA;AACA;AACA;AAJA;;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAPA;;AAWA;AACA;AACA;AACA;;AACA;AAJA;AAMA;;;AAEA;AACA;AAEA;;;AAEA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;;AAIA;;AACA;AARA;;AAcA;AACA;AACA;AAEA;;AACA;;;AAEA;AACA;;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAbA;;;AAgBA;;;AAEA;AACA;AA1BA;AA8BA;;;;AACA;AAAA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;;AAIA;;AACA;;AAEA;AACA;;AACA;;AAEA;;AAEA;AAhBA;AAkBA;AACA;;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAEA;AAAA;;AACA;AACA;;AACA;;AACA;AACA;;AACA;AACA;AANA;AAQA;;;AAEA;AAAA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AALA;AAOA;;;AAEA;AAAA;;;AAEA;AACA;;AACA;AACA;AACA;AAJA;;AAOA;AACA;;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;;;;;;;;;;;;;;;;;AC3NA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAVA;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AApBA;;AAwBA;AACA;AACA;AACA;;AAIA;AACA;AARA;AAtCA;;;;;;;;;;;ACFA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AElDA;AACA;AACA;AACA;AACA","sources":["webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/entrypoints/decidim_decidim_awesome_map.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/awesome_map/api/api_fetcher.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/awesome_map/api/fetcher.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/awesome_map/api/meetings_fetcher.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/awesome_map/api/proposals_fetcher.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/awesome_map/awesome_map.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/awesome_map/controllers/controller.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/awesome_map/controllers/meetings_controller.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/awesome_map/controllers/proposals_controller.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/awesome_map/controls_ui.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/src/decidim/decidim_awesome/awesome_map/load_map.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/entrypoints/decidim_decidim_awesome_map.scss?9549","webpack://app/webpack/bootstrap","webpack://app/webpack/runtime/chunk loaded","webpack://app/webpack/runtime/compat get default export","webpack://app/webpack/runtime/define property getters","webpack://app/webpack/runtime/hasOwnProperty shorthand","webpack://app/webpack/runtime/make namespace object","webpack://app/webpack/runtime/jsonp chunk loading","webpack://app/webpack/before-startup","webpack://app/webpack/startup","webpack://app/webpack/after-startup"],"sourcesContent":["import \"src/decidim/decidim_awesome/awesome_map/load_map.js\"\n\n// CSS\nimport \"entrypoints/decidim_decidim_awesome_map.scss\";\n\n","export default class ApiFetcher { // eslint-disable-line no-unused-vars\n  constructor(query, variables) {\n    this.query = query;\n    this.variables = variables;\n  }\n\n  fetch(callback) {\n    $.ajax({\n      method: \"POST\",\n      url: \"/api\",\n      contentType: \"application/json\",\n      data: JSON.stringify({\n        query: this.query,\n        variables: this.variables\n      })\n    }).done(function(data) {\n      callback(data.data);\n    });\n  }\n\n  fetchAll (callback) {\n    this.fetch(callback);\n  }\n}\n","import ApiFetcher from \"src/decidim/decidim_awesome/awesome_map/api/api_fetcher\";\n\nexport default class Fetcher {\n  constructor(controller) {\n    this.controller = controller;\n    this.config = {\n      length: controller.awesomeMap.config.length || 255\n    };\n    this.onFinished = () => {};\n    this.onNode = () => {};\n    this.onCollection = () => {};\n    this.hashtags = [];\n\n    this.collection = this.controller.component.type;\n    // override in specific components:\n    this.query = `query ($id: ID!, $after: String!) {\n        component(id: $id) {\n          id\n          __typename\n        }\n      }`;\n  }\n\n  fetch(after = \"\") {\n    const variables = {\n      \"id\": this.controller.component.id,\n      \"after\": after\n    };\n    const api = new ApiFetcher(this.query, variables);\n    api.fetchAll((result) => {\n      if (result) {\n        const collection = result.component[this.collection];\n        // console.log(\"collection\",collection)\n        \n        collection.edges.forEach((element) => {\n          let node = element.node;\n          if (!node) {\n            return;\n          }\n      \n          if (node.coordinates && node.coordinates.latitude && node.coordinates.longitude) {\n            this.decorateNode(node);\n            this.onNode(node)\n          }\n        });\n\n        this.onCollection(collection);\n\n        if (collection.pageInfo.hasNextPage) {\n          this.fetch(collection.pageInfo.endCursor);\n        } else {\n          this.onFinished();\n        }\n      }\n    });\n  }\n\n  decorateNode(node) {\n    const body = this.findTranslation(node.body.translations);\n    const title = this.findTranslation(node.title.translations);\n    node.hashtags = this.collectHashtags(title);\n    node.hashtags = node.hashtags.concat(this.collectHashtags(body));\n    // hashtags in the title look ugly, lets replace the gid:... structure with the tag #name\n    node.title.translation = this.replaceHashtags(title, node.hashtags);\n    node.body.translation = this.appendHtmlHashtags(this.truncate(this.removeHashtags(body)).replace(/\\n/g, \"<br>\"), node.hashtags);\n    node.link = `${this.controller.component.url}/${this.collection}/${node.id}`;\n  }\n\n  findTranslation(translations) {\n    let text, \n        lang = document.querySelector(\"html\").getAttribute(\"lang\");\n    \n    translations.forEach((t) => {\n      if (t.text) {\n        if (!text || t.locale == lang) {\n          text = t.text\n        }\n      }\n    });\n    return text;\n  }\n\n  collectHashtags(text) {\n    let tags = [];\n    if (text) {\n      const gids = text.match(/gid:\\/\\/[^\\s<&]+/g)\n      if (gids) {\n        tags = gids.filter((gid) => gid.indexOf(\"/Decidim::Hashtag/\") != -1).map((gid) => {\n          const parts = gid.split(\"/\");\n          const fromSelector = parts[5].charAt(0) == \"_\";\n          const tag = fromSelector\n            ? parts[5].substr(1)\n            : parts[5];\n          const name = `#${tag}`;\n          const html = `<a href=\"/search?term=${name}\">${name}</a>`;\n          const hashtag = {\n            color: getComputedStyle(document.documentElement).getPropertyValue(\"--secondary\"),\n            gid: gid,\n            id: parseInt(parts[4], 10),\n            fromSelector: fromSelector,\n            tag: tag,\n            name: name,\n            html: html\n          }\n          this.hashtags.push(hashtag)\n          return hashtag;\n        });\n      }\n    }\n    return tags;\n  }\n\n  replaceHashtags(text, hashtags) {\n    hashtags.forEach((tag) => {\n      text = text.replace(tag.gid, tag.name)\n    });\n    return text;\n  }\n\n  removeHashtags(text) {\n    return text.replace(/gid:\\/\\/[^\\s<&]+/g, \"\");\n  }\n\n  appendHtmlHashtags(text, tags) {\n    tags.forEach((tag) => {\n      text += ` ${tag.html}`;\n    });\n    return text;\n  }\n\n  truncate(html) {\n    return $.truncate(html, this.config);\n  }\n}\n","import Fetcher from \"src/decidim/decidim_awesome/awesome_map/api/fetcher\";\n\nexport default class MeetingsFetcher extends Fetcher {\n  constructor(controller) {\n    super(controller);\n    this.query = `query ($id: ID!, $after: String!) {\n    component(id: $id) {\n        id\n        __typename\n        ... on Meetings {\n          meetings(first: 50, after: $after) {\n            pageInfo {\n              hasNextPage\n              endCursor\n            }\n            edges {\n              node {\n                id\n                title {\n                  translations {\n                    text\n                    locale\n                  }\n                }\n                body: description {\n                  translations {\n                    text\n                    locale\n                  }\n                }\n                startTime\n                location {\n                  translations {\n                    text\n                    locale\n                  }\n                }\n                address\n                locationHints {\n                  translations {\n                    text\n                    locale\n                  }\n                }\n                coordinates {\n                  latitude\n                  longitude\n                }\n                category {\n                  id\n                }\n              }\n            }\n          }\n        }\n      }\n    }`;\n  }\n}\n","import Fetcher from \"src/decidim/decidim_awesome/awesome_map/api/fetcher\";\n\nexport default class ProposalsFetcher extends Fetcher {\n  constructor(controller) {\n    super(controller);\n    this.query = `query ($id: ID!, $after: String!) {\n      component(id: $id) {\n          id\n          __typename\n          ... on Proposals {\n            proposals(first: 50, after: $after){\n              pageInfo {\n                hasNextPage\n                endCursor\n              }\n              edges {\n                node {\n                  id\n                  state\n                  title {\n                    translations {\n                      text\n                      locale\n                    }\n                  }\n                  body {\n                    translations {\n                      text\n                      locale\n                    }\n                  }\n                  address\n                  coordinates {\n                    latitude\n                    longitude\n                  }\n                  amendments {\n                    emendation {\n                      id\n                    }\n                  }\n                  category {\n                    id\n                  }\n                }\n              }\n            }\n          }\n        }\n      }`;\n  }\n}\n","import * as L from \"leaflet\";\nimport \"src/decidim/map/icon.js\" // comes with Decidim\nimport \"src/decidim/vendor/leaflet-tilelayer-here\"\nimport \"leaflet.markercluster\"; // Comes with Decidim\nimport \"leaflet.featuregroup.subgroup\" // included in this package.json\nimport \"src/vendor/jquery.truncate\"\nimport \"jsrender\"\n\nimport ControlsUI from \"src/decidim/decidim_awesome/awesome_map/controls_ui\";\nimport ProposalsController from \"src/decidim/decidim_awesome/awesome_map/controllers/proposals_controller\";\nimport MeetingsController from \"src/decidim/decidim_awesome/awesome_map/controllers/meetings_controller\";\n\nexport default class AwesomeMap {\n  constructor(map, config) {\n    this.map = map;\n    this.categories = window.AwesomeMap && window.AwesomeMap.categories || []\n    this.config = $.extend({\n      length: 255,\n      center: null,\n      zoom: 8,\n      menu: {\n        amendments: false,\n        meetings: false,\n        categories: true,\n        hashtags: false,\n        mergeComponents: false\n      },\n      show: {\n        withdrawn: false,\n        accepted: false,\n        evaluating: false,\n        notAnswered: false,\n        rejected: false\n      },\n      hideControls: false,\n      collapsedMenu: false,\n      components: []\n    }, config);\n    this.layers = {};\n    this.cluster = new L.MarkerClusterGroup();\n    this.map.addLayer(this.cluster);\n    this.controls = new ControlsUI(this);\n    this.onFinished = () => {};\n    this.controllers = {};\n    this.loading = [];\n    this._firstController = {};\n  }\n\n  // Queries the API and load all the markers\n  loadControllers() {\n    this.autoResize();\n    this.controls.attach();\n\n    this.config.components.forEach((component) => {\n      const controller = this._getController(component);\n      if (controller) {\n        controller.loadNodes();\n        this.loading.push(component.type);\n        controller.onFinished = () => {\n          this.loading.pop();\n          this.autoResize();\n\n          if (this.loading.length == 0) {\n            this.controls.$loading.hide();\n            // call trigger as all loads are finished\n            this.onFinished();\n          }\n        };\n      }\n    });\n  }\n\n  autoResize() {\n    // Setup center/zoom options if specified, otherwise fitbounds\n    const bounds = this.cluster.getBounds()\n    if (this.config.center && this.config.zoom) {\n      this.map.setView(this.config.center, this.config.zoom);\n    } else if (bounds.isValid()) {\n      // this.map.fitBounds(bounds, { padding: [50, 50] }); // this doesn't work much of the time, probably some race condition\n      this.map.fitBounds([[bounds.getNorth(), bounds.getEast()], [bounds.getSouth(), bounds.getWest()]], { padding: [50, 50] });\n    }\n  }\n\n  getCategory(category) {\n    let defaultCat = {\n      color: getComputedStyle(document.documentElement).getPropertyValue(\"--primary\"),\n      children: () => {},\n      parent: null,\n      name: null\n    };\n\n    if (category) {\n      let id = category.id\n        ? parseInt(category.id, 10)\n        : parseInt(category, 10);\n      let cat = this.categories.find((c) => c.id == id);\n      if (cat) {\n        cat.children = () => {\n          return this.categories.filter((c) => c.parent === cat.id);\n        }\n        return cat;\n      }\n    }\n    return defaultCat;\n  }\n\n  _getController(component) {\n    let controller;\n\n    if (component.type == \"proposals\") {\n      controller = new ProposalsController(this, component);\n    }\n    if (component.type == \"meetings\" && this.config.menu.meetings) {\n      controller = new MeetingsController(this, component);\n    }\n\n    if (controller) {\n      // Agrupate layers for controlling components\n      if (this._firstController[component.type] && this.config.menu.mergeComponents) {\n        controller.controls = this._firstController[component.type].controls;\n      } else  {\n        controller.addControls();\n      }\n      this._firstController[component.type] = this._firstController[component.type] || controller;\n      this.controllers[component.type] = controller;\n      return this.controllers[component.type]\n    }\n  }\n}\n","import * as L from \"leaflet\";\n\nexport default class Controller {\n  constructor(awesomeMap, component) {\n    this.awesomeMap = awesomeMap;\n    this.component = component;\n    this.templateId = \"marker-meeting-popup\";\n    this.controls = {\n      label: this.getLabel(),\n      group: new L.FeatureGroup.SubGroup(this.awesomeMap.cluster)\n    };\n    this.onFinished = () => {};\n    this.allNodes = [];\n  }\n\n  getLabel() {\n    let text = this.awesomeMap.config.menu.mergeComponents || !this.component.name \n      ? window.DecidimAwesome.texts[this.component.type]\n      : this.component.name;\n    return `<span class=\"awesome_map-component\" id=\"awesome_map-component_${this.component.id}\" title=\"0\" data-layer=\"${this.component.type}\">${text}</span>`\n  }\n\n  setFetcher(Fetcher) {\n    this.fetcher = new Fetcher(this);\n    this.fetcher.onFinished = () => {\n      // console.log(`all ${this.component.type} loaded`, this)\n      this._onFinished();\n    };\n    this.fetcher.onCollection = (collection) =>  {\n      if (collection && collection.edges)  { \n        // Add markers to the main cluster group\n        try {\n          this.awesomeMap.cluster.addLayers(collection.edges.map((item) => item.node.marker));\n        } catch (e) {\n          console.error(\"Failed marker collection assignation\", collection);\n        }\n        // subgroups don't have th addLayers utility\n        collection.edges.forEach((item) => {\n          this.addMarkerCategory(item.node.marker, item.node.category);\n          this.addMarkerHashtags(item.node.marker, item.node.hashtags);\n        });\n      }\n    };\n  }\n\n  addControls() {\n    this.awesomeMap.controls.main.addOverlay(this.controls.group, this.controls.label);\n    this.awesomeMap.map.addLayer(this.controls.group);\n  }\n\n  loadNodes() {\n    // to override\n  }\n\n  addMarker(marker, node) {\n\n    /* \n    theorically, this should be enough to create popups on markers but it looks that\n    there is some bug in leaflet that sometimes prevents this to work\n    */\n    /*\n    let dom = document.createElement(\"div\");\n    // console.log(\"addMarker\", marker, \"dom\", dom)\n    dom.innerHTML = $.templates(`#${this.templateId}`).render(node);\n    marker.bindPopup(dom, {\n      maxwidth: 640,\n      minWidth: 500,\n      keepInView: true,\n      className: \"map-info\"\n    }); //*/\n\n    marker.on(\"click\", () => {\n      let dom = document.createElement(\"div\");\n      dom.innerHTML = $.templates(`#${this.templateId}`).render(node);\n\n      let pop = L.popup({\n        maxwidth: 640,\n        minWidth: 500,\n        keepInView: true,\n        className: \"map-info\"\n\n      }).setLatLng(marker.getLatLng()).setContent(dom);\n      this.awesomeMap.map.addLayer(pop);\n    });\n    node.marker = marker;\n    node.component = this.component;\n    this.allNodes.push(node);\n  }\n\n  addMarkerCategory(marker, category) {\n    // Add to category layer\n    const cat = this.awesomeMap.getCategory(category);\n    if (this.awesomeMap.layers[cat.id]) {\n      try {\n        this.awesomeMap.layers[cat.id].group.addLayer(marker);\n        this.awesomeMap.controls.showCategory(cat);\n      } catch (e) {\n        console.error(\"Failed category marker assignation\", marker, e.message);\n      }\n    }   \n  }\n\n  addMarkerHashtags(marker, hashtags) {\n    // Add hashtag layer\n    if (this.awesomeMap.config.menu.hashtags) {\n      try {\n        this.awesomeMap.controls.addHashtagsControls(hashtags, marker);\n      } catch (e) {\n        console.error(\"Failed hashtags marker assignation\", marker, e.message);\n      }\n    }\n  }\n\n  // Override if needed (call this.onFinished() at the end!)\n  _onFinished() {\n    this.awesomeMap.controls.updateStats(`component_${this.component.id}`, this.allNodes.length);\n    this.onFinished();\n  }\n\n  createIcon(Builder, color) {\n    return new Builder({\n      color: \"#000000\",\n      fillColor: color,\n      circleFillColor: color,\n      weight: 1,\n      stroke: color,\n      fillOpacity: 0.9\n    });\n  }\n}\n","import * as L from \"leaflet\";\nimport Controller from \"src/decidim/decidim_awesome/awesome_map/controllers/controller\";\nimport MeetingsFetcher from \"src/decidim/decidim_awesome/awesome_map/api/meetings_fetcher\";\n\nconst MeetingIcon = L.DivIcon.SVGIcon.DecidimIcon.extend({\n  _createPathDescription: function() {\n    return \"M 15.991543,4 C 7.3956015,4 2.9250351,10.5 3.000951,16.999999 3.1063486,26.460968 12.747693,30.000004 15.991543,43 19.242091,30.000004 29,26.255134 29,16.999999 29,10.5 23.951131,4 15.996007,4 m -0.153508,2.6000001 a 2.1720294,2.1076698 0 0 1 2.330514,2.1124998 2.177008,2.1125006 0 0 1 -4.354016,0 2.1720294,2.1076698 0 0 1 2.023502,-2.1124998 m -2.651707,4.8056679 h 5.610202 l 3.935584,7.569899 -1.926038,0.934266 -2.009546,-3.859265 v 14.557403 h -2.484243 v -9.126003 h -0.642162 v 9.126003 H 13.190347 V 16.050568 l -2.009545,3.859265 -1.926036,-0.934266 3.935581,-7.569899\";\n  }\n});\n\nexport default class MeetingsController extends Controller {\n  constructor(awesomeMap, component) {\n    super(awesomeMap, component)\n    this.templateId = \"marker-meeting-popup\";\n    this.setFetcher(MeetingsFetcher);\n  }\n\n  loadNodes() {\n    // for each meeting, create a marker with an associated popup\n    this.fetcher.onNode = (meeting) => {\n      let marker = new L.Marker([meeting.coordinates.latitude, meeting.coordinates.longitude], {\n        icon: this.createIcon(MeetingIcon, this.awesomeMap.getCategory(meeting.category).color),\n        title: meeting.title.translation\n      });\n      // console.log(\"new meeting\", meeting, marker)\n      this.addMarker(marker, meeting);\n    };\n\n    this.fetcher.fetch();\n  }\n}\n","import * as L from \"leaflet\";\nimport Controller from \"src/decidim/decidim_awesome/awesome_map/controllers/controller\";\nimport ProposalsFetcher from \"src/decidim/decidim_awesome/awesome_map/api/proposals_fetcher\";\n\nconst ProposalIcon = L.DivIcon.SVGIcon.DecidimIcon.extend({\n  options: {\n    fillColor: \"#ef604d\",\n    fillOpacity: 0.8,\n    strokeWidth: 1,\n    strokeOpcacity: 1\n  }\n});\nexport default class ProposalsController extends Controller {\n  constructor(awesomeMap, component) {\n    super(awesomeMap, component)\n    this.templateId = \"marker-proposal-popup\";\n    this.amendments = {};\n    this.setFetcher(ProposalsFetcher);\n  }\n\n  addControls() {\n    super.addControls();\n\n    // add control layer for amendments if any\n    if (this.awesomeMap.config.menu.amendments && this.component.amendments && !this.awesomeMap.layers.amendments) {\n      this.awesomeMap.layers.amendments = {\n        label: `<span class=\"awesome_map-component\" id=\"awesome_map-amendments_${this.component.id}\" title=\"0\" data-layer=\"amendments\">${window.DecidimAwesome.texts.amendments}</span>`,\n        group: new L.FeatureGroup.SubGroup(this.awesomeMap.cluster)\n      }\n      this.awesomeMap.controls.main.addOverlay(this.awesomeMap.layers.amendments.group, this.awesomeMap.layers.amendments.label);\n      this.awesomeMap.layers.amendments.group.addTo(this.awesomeMap.map);\n    }\n  }\n\n  loadNodes() {\n    // for each proposal, create a marker with an associated popup\n    this.fetcher.onNode = (proposal) => {\n      let marker = new L.Marker([proposal.coordinates.latitude, proposal.coordinates.longitude], {\n        icon: this.createIcon(ProposalIcon, this.awesomeMap.getCategory(proposal.category).color),\n        title: proposal.title.translation\n      });\n\n      // Check if it has amendments, add it to a list\n      // also assign parent's proposal categories to it\n      if (proposal.amendments && proposal.amendments.length) {\n        proposal.amendments.forEach((amendment) => {\n          this.amendments[amendment.emendation.id] = proposal;\n        });\n      }\n\n      // console.log(\"new proposal\", proposal, \"marker\",  marker)\n      this.addMarker(marker, proposal);\n    };\n\n    this.fetcher.fetch();\n  }\n\n  _onFinished() {\n    const iterableAmendments = Object.entries(this.amendments);\n    this.awesomeMap.controls.updateStats(`component_${this.component.id}`, this.allNodes.length - iterableAmendments.length);\n    this.awesomeMap.controls.updateStats(`amendments_${this.component.id}`, iterableAmendments.length);\n\n    // Process all amendments\n    iterableAmendments.forEach((amendment) => {\n      const marker = this.allNodes.find((node) => node.id == amendment[0]);\n      const parent = amendment[1];\n      // console.log(\"marker\", marker, \"parent proposal\", parent)\n      // add marker to amendments layers and remove it from proposals\n      if (marker) {\n        try { \n          marker.marker.removeFrom(this.controls.group) \n        } catch (e) { \n          console.error(\"error removeFrom marker\", marker, \"layer\", this.controls.group,  e);\n        }\n        if (this.awesomeMap.config.menu.amendments) {\n          marker.marker.addTo(this.awesomeMap.layers.amendments.group);\n          // mimic parent category (amendments doesn't have categories)\n          if (parent.category) {\n            marker.marker.setIcon(this.createIcon(ProposalIcon, this.awesomeMap.getCategory(parent.category).color));\n            this.addMarkerCategory(marker.marker, parent.category)\n          }\n        }\n      }\n    });\n\n    this.onFinished();\n  }\n}\n","import * as L from \"leaflet\";\n\nexport default class ControlsUI {\n  constructor(awesomeMap) {\n    this.awesomeMap = awesomeMap;\n\n    this.main = L.control.layers(null, null, {\n      position: \"topleft\",\n      sortLayers: false,\n      collapsed: this.awesomeMap.config.collapsedMenu\n      // hideSingleBase: true\n    });\n\n    if (this.awesomeMap.config.hideControls) {\n      $(this.main.getContainer()).hide();\n    }\n\n    this.$loading = $(\"#awesome-map .loading-spinner\");\n    this.onHashtag = this._orderHashtags;\n\n    this.awesomeMap.map.on(\"overlayadd\", () => {\n      this.removeHiddenCategories();\n    });\n  }\n\n  attach() {\n    // legends\n    this.main.addTo(this.awesomeMap.map);\n\n    this.addSearchControls();\n    if (this.awesomeMap.config.menu.categories) {\n      this.addCategoriesControls();\n    }\n\n    // sub-layer hashtag title toggle\n    $(\"#awesome-map\").on(\"click\", \".awesome_map-title-control\", (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      $(\"#awesome_map-categories-control\").toggleClass(\"active\");\n      $(\"#awesome_map-hashtags-control\").toggleClass(\"active\");\n    });\n\n    // hashtag events\n    $(\"#awesome-map\").on(\"change\", \".awesome_map-hashtags-selector\", (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      const tag = $(e.target).closest(\"label\").data(\"layer\");\n      // console.log(\"changed, layer\", tag, \"checked\", e.target.checked, e);\n      if (tag) {\n        this.updateHashtagLayers();\n      }\n    });\n\n    // select/deselect all tags\n    $(\"#awesome-map\").on(\"click\", \".awesome_map-toggle_all_tags\", (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      $(\"#awesome-map .awesome_map-hashtags-selector\").prop(\"checked\", $(\"#awesome-map .awesome_map-hashtags-selector:checked\").length < $(\"#awesome-map .awesome_map-hashtags-selector\").length);\n      this.updateHashtagLayers();\n    });\n  }\n\n  addSearchControls() {\n    $(this.main.getContainer()).contents(\"form\").append(`<div id=\"awesome_map-categories-control\" class=\"active\"><b class=\"awesome_map-title-control\">${window.DecidimAwesome.texts.categories}</b><div class=\"categories-container\"></div></div>\n    <div id=\"awesome_map-hashtags-control\"><b class=\"awesome_map-title-control\">${window.DecidimAwesome.texts.hashtags}</b><div class=\"hashtags-container\"></div><a href=\"#\" class=\"awesome_map-toggle_all_tags\">${window.DecidimAwesome.texts.select_deselect_all}</a></div>`);\n  }\n\n  addCategoriesControls() {\n    this.awesomeMap.categories.forEach((category) => {\n      // add control layer for this category\n      const label = `<i class=\"awesome_map-category_${category.id}\"></i> ${category.name}`;\n      this.awesomeMap.layers[category.id] = {\n        label: label,\n        group: new L.FeatureGroup.SubGroup(this.awesomeMap.cluster)\n      };\n      this.awesomeMap.layers[category.id].group.addTo(this.awesomeMap.map);\n      $(\"#awesome_map-categories-control .categories-container\").append(`<label data-layer=\"${category.id}\" class=\"awesome_map-category-${category.id}${category.parent\n        ? \" subcategory\"\n        : \"\"}\" data-parent=\"${category.parent}\"><input type=\"checkbox\" class=\"awesome_map-categories-selector\" checked><span>${label}</span></label>`);\n    })\n\n    // category events\n    $(\"#awesome-map\").on(\"change\", \".awesome_map-categories-selector\", (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const id = $(e.target).closest(\"label\").data(\"layer\");\n      const cat = this.awesomeMap.getCategory(id);\n      // console.log(\"changed, layer\", id, \"cat\", cat, \"checked\", e.target.checked, e);\n      if (cat) {\n        const layer = this.awesomeMap.layers[cat.id];\n        if (e.target.checked) {\n          // show group of markers\n          this.awesomeMap.map.addLayer(layer.group);\n        } else {\n          // hide group of markers\n          this.awesomeMap.map.removeLayer(layer.group);\n          // cat.children().forEach((c) => {\n          //   let $el = $(`.awesome_map-category-${c.id}`);\n          //   if($el.contents(\"input\").prop(\"checked\")) {\n          //     $el.click();\n          //   }\n          // });\n        }\n        // if it's a children, put the parent to indeterminate\n        this._indeterminateParentInput(cat);\n        // sync tags\n        this.updateHashtagLayers();\n      }\n    });\n  }\n\n  // Hashtags are collected directly from proposals (this is different than categories)\n  addHashtagsControls(hashtags, marker) {\n    // show hashtag layer\n    if (hashtags && hashtags.length) {\n      $(\"#awesome_map-hashtags-control\").show();\n      hashtags.forEach((hashtag) => {\n        // Add layer if not exists, otherwise just add the marker to the group\n        if (!this.awesomeMap.layers[hashtag.tag]) {\n          this.awesomeMap.layers[hashtag.tag] = {\n            label: hashtag.name,\n            group: new L.FeatureGroup.SubGroup(this.awesomeMap.cluster)\n          };\n          this.awesomeMap.map.addLayer(this.awesomeMap.layers[hashtag.tag].group);\n          $(\"#awesome_map-hashtags-control .hashtags-container\").append(`<label data-layer=\"${hashtag.tag}\" class=\"awesome_map-hashtag-${hashtag.tag}\"><input type=\"checkbox\" class=\"awesome_map-hashtags-selector\" checked><span>${hashtag.name}</span></label>`);\n          // Call a trigger, might be in service for customizations\n          this.onHashtag(hashtag, $(\"#awesome_map-hashtags-control .hashtags-container\"));\n        }\n        this.awesomeMap.layers[hashtag.tag].group.addLayer(marker);\n\n        const $label = $(`label.awesome_map-hashtag-${hashtag.tag}`);\n        // update number of items\n        $label.attr(\"title\", `${parseInt($label.attr(\"title\") || 0) + 1} ${window.DecidimAwesome.texts.items}`);\n      });\n    }\n  }\n\n  showCategory(cat) {\n    $(\"#awesome_map-categories-control\").show();\n    // show category if hidden\n    const $label = $(`label.awesome_map-category-${cat.id}`);\n    const $parent = $(`label.awesome_map-category-${cat.parent}`);\n    $label.show();\n    // update number of items\n    $label.attr(\"title\", `${parseInt($label.attr(\"title\") || 0) + 1} ${window.DecidimAwesome.texts.items}`);\n    // show parent if apply\n    $parent.show();\n    $parent.attr(\"title\", `${parseInt($parent.attr(\"title\") || 0) + 1} ${window.DecidimAwesome.texts.items}`);\n  }\n\n  removeHiddenComponents() {\n    $(\".awesome_map-component\").each((_idx, el) => {\n      const layer = this.awesomeMap.layers[$(el).data(\"layer\")];\n      const $input = $(el).closest(\"div\").find(\"input:not(:checked)\");\n      if (layer && $input.length) {\n        this.awesomeMap.map.addLayer(layer.group);\n        this.awesomeMap.map.removeLayer(layer.group);\n      }\n    });\n  }\n\n  removeHiddenCategories() {\n    $(\".awesome_map-categories-selector:not(:checked)\").each((_idx, el) => {\n      const layer = this.awesomeMap.layers[$(el).closest(\"label\").data(\"layer\")];\n      if (layer) {\n        this.awesomeMap.map.addLayer(layer.group);\n        this.awesomeMap.map.removeLayer(layer.group);\n      }\n    });\n  }\n\n  updateHashtagLayers() {\n    // hide all\n    $(\".awesome_map-hashtags-selector\").each((_idx, el) => {\n      const layer = this.awesomeMap.layers[$(el).closest(\"label\").data(\"layer\")];\n      if (layer) {\n        this.awesomeMap.map.removeLayer(layer.group);\n      }\n    });\n    // show selected only\n    $(\".awesome_map-hashtags-selector:checked\").each((_idx, el) => {\n      const layer = this.awesomeMap.layers[$(el).closest(\"label\").data(\"layer\")];\n      if (layer) {\n        this.awesomeMap.map.addLayer(layer.group);\n      }\n    });\n    // hide non-selected categories\n    this.removeHiddenComponents();\n    this.removeHiddenCategories();\n  }\n\n  updateStats(uid, total) {\n    // update component stats\n    const $component = $(`#awesome_map-${uid}`);\n    $component.attr(\"title\", `${total} ${window.DecidimAwesome.texts.items}`);\n  }\n\n  _indeterminateParentInput(cat) {\n    if (cat.parent) {\n      let $input = $(`.awesome_map-category-${cat.parent}`).contents(\"input\");\n      let $subcats = $(`[class^=\"awesome_map-category-\"][data-parent=\"${cat.parent}\"]:visible`);\n      let num_checked = $subcats.contents(\"input:checked\").length;\n      $input.prop(\"indeterminate\", num_checked != $subcats.length && num_checked != 0);\n    }\n  }\n\n  // order hashtags alphabetically\n  _orderHashtags(_hashtag, $div) {\n    let $last = $div.contents(\"label:last\");\n    if ($last.prev(\"label\").length) {\n      // move the label to order it alphabetically\n      $div.contents(\"label\").each((_idx, el) => {\n        if ($(el).text().localeCompare($last.text()) > 0) {\n          $(el).before($last);\n          return false;\n        }\n      });\n    }\n  }\n}\n","import AwesomeMap from \"src/decidim/decidim_awesome/awesome_map/awesome_map\"\n\n$(() => {\n  const sanitizeCenter = (string) => {\n    if (string) {\n      const parts = string.split(\",\")\n      if (parts.length >= 2) {\n        const lat = parseFloat(parts[0]);\n        const lng = parseFloat(parts[1]);\n        if (lat && lng) {\n          return [lat, lng];\n        }\n      }\n    }\n  };\n\n  const config = {\n    length: $(\"#awesome-map\").data(\"truncate\") || 254,\n    center: sanitizeCenter($(\"#awesome-map\").data(\"map-center\")),\n    zoom: $(\"#awesome-map\").data(\"map-zoom\"),    \n    menu: {\n      amendments: $(\"#awesome-map\").data(\"menu-amendments\"),\n      meetings: $(\"#awesome-map\").data(\"menu-meetings\"),\n      categories: $(\"#awesome-map\").data(\"menu-categories\"),\n      hashtags: $(\"#awesome-map\").data(\"menu-hashtags\"),\n      mergeComponents: $(\"#awesome-map\").data(\"menu-merge-components\")\n    },\n    show: {\n      withdrawn: $(\"#awesome-map\").data(\"show-withdrawn\"),\n      accepted: $(\"#awesome-map\").data(\"show-accepted\"),\n      evaluating: $(\"#awesome-map\").data(\"show-evaluating\"),\n      notAnswered: $(\"#awesome-map\").data(\"show-not-answered\"),\n      rejected: $(\"#awesome-map\").data(\"show-rejected\")\n    },\n    hideControls: $(\"#awesome-map\").data(\"hide-controls\"),\n    collapsedMenu: $(\"#awesome-map\").data(\"collapsed\"),\n    components: $(\"#awesome-map\").data(\"components\")\n  };\n\n  // build awesome map (if exist)\n  $(\"#awesome-map .google-map\").on(\"ready.decidim\", (evt, map) => {\n    // bindPopup doesn't work for some unknown cause and these handler neither so we're cancelling them\n    map.off(\"popupopen\");\n    map.off(\"popupclose\");\n\n    // console.log(\"ready map\", map);\n\n    window.AwesomeMap = new AwesomeMap(map, config);\n    window.AwesomeMap.loadControllers();\n  });\n});\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"decidim_decidim_awesome_map\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkapp\"] = self[\"webpackChunkapp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_leaflet-svgicon_index_js-node_modules_leaflet_markercluster_dist_leaflet-b732f3\",\"vendors-node_modules_jsrender_jsrender_js-node_modules_leaflet_featuregroup_subgroup_dist_lea-79fc92\",\"_rbenv_versions_2_7_5_lib_ruby_gems_2_7_0_bundler_gems_decidim-540e5d88e8b8_decidim-core_app_-d41726\"], function() { return __webpack_require__(\"../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-decidim_awesome-0.8.3/app/packs/entrypoints/decidim_decidim_awesome_map.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}